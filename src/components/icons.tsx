import React from 'react';

interface IconProps extends React.SVGProps<SVGSVGElement> {
  slug?: string;
}

const HalfLifeIcon = (props: React.SVGProps<SVGSVGElement>) => (
  <svg width="148.9426mm" height="148.9413mm" viewBox="0 0 148.94259 148.9413" version="1.1" {...props}>
      <defs>
          <linearGradient id="color-0-new" gradientUnits="userSpaceOnUse">
              <stop style={{stopColor: "rgb(255, 94, 0)"}}/>
          </linearGradient>
          <linearGradient id="color-1-new">
              <stop style={{stopColor: "rgb(255, 77, 0)"}} offset="0"/>
              <stop offset="0.997" style={{stopColor: "rgb(120, 45, 0)"}}/>
          </linearGradient>
          <linearGradient id="color-1-0-new" href="#color-1-new" gradientUnits="userSpaceOnUse" x1="76.429" y1="30.69" x2="76.429" y2="113.683"/>
          <linearGradient id="color-1-1-new" href="#color-1-new" gradientUnits="userSpaceOnUse" x1="74.471" y1="7.363" x2="74.471" y2="141.578"/>
      </defs>
      <path d="M 92.306118,113.68271 75.583598,71.301185 51.066783,109.93001 H 35.696067 L 69.936358,54.638435 66.092278,43.710825 H 52.759913 v -13.02094 h 22.822395 l 26.213832,66.65925 11.52491,-3.75443 3.84061,12.913095 z" style={{strokeWidth: 0.433136, fill: "url(#color-1-0-new)"}}/>
      <path d="m 141.57928,74.470435 c 0,37.067375 -30.04364,67.107555 -67.107562,67.107555 -37.063901,0 -67.1084,-30.03974 -67.1084,-67.107555 0,-37.06304 30.043631,-67.107117 67.1084,-67.107117 37.063492,0 67.107562,30.044077 67.107562,67.107117 z" style={{fill: "none", strokeWidth: 14.7266, strokeOpacity: 0.9799, stroke: "url(#color-1-1-new)"}}/>
      <g transform="matrix(1, 0, 0, 1, 0.22914, 0.458281)">
          <title>Russian Flag</title>
          <rect fill="#fff" width="65.125" height="21.708" x="84.412" y="105.618" style={{strokeWidth: 26.458}}/>
          <rect fill="#d52b1e" y="127.326" width="65.125" height="21.708" x="84.412" style={{strokeWidth: 26.458}}/>
          <rect fill="#0039a6" y="120.09" width="65.125" height="14.471" x="84.412" style={{strokeWidth: 26.458}}/>
      </g>
  </svg>
);


const BlueShiftIcon = (props: React.SVGProps<SVGSVGElement>) => (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 422.2 422.2" {...props}>
        <defs>
            <linearGradient id="lambdaGradient" x1="216.7" y1="336.9" x2="216.7" y2="101.6" gradientTransform="translate(0 424) scale(1 -1)" gradientUnits="userSpaceOnUse">
            <stop offset="0" stopColor="#2929ff"/>
            <stop offset="1" stopColor="#080055"/>
            </linearGradient>
            <linearGradient id="circleGradient" x1="211.1" y1="422.6" x2="211.1" y2="3.2" gradientTransform="translate(0 424) scale(1 -1)" gradientUnits="userSpaceOnUse">
            <stop offset="0" stopColor="#2929ff"/>
            <stop offset="1" stopColor="#10006a"/>
            </linearGradient>
        </defs>

        <path d="M261.7,322.3l-47.4-120.1-69.5,109.5h-43.6l97.1-156.7-10.9-31h-37.8v-36.9h64.7l74.3,189 32.7-10.6 10.9,36.6-70.5,20.3Z"
                fill="url(#lambdaGradient)"/>
        <path d="M401.3,211.1c0,105.1-85.2,190.2-190.2,190.2S20.9,316.2,20.9,211.1,106,20.9,211.1,20.9s190.2,85.2,190.2,190.2Z"
                fill="none" stroke="url(#circleGradient)" strokeWidth="39" strokeMiterlimit="10"/>
        <rect x="239.9" y="300.7" width="184.6" height="61.5" fill="#ffffff"/>
        <rect x="239.9" y="362.2" width="184.6" height="61.5" fill="#d52b1e"/>
        <rect x="239.9" y="341.7" width="184.6" height="41" fill="#0039a6"/>
    </svg>
);

const OpposingForceIcon = (props: React.SVGProps<SVGSVGElement>) => (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 422.2 422.2" {...props}>
      <defs>
        <linearGradient id="OpposingForceLambdaGradient" x1="216.7" y1="336.9" x2="216.7" y2="101.6" gradientTransform="translate(0 424) scale(1 -1)" gradientUnits="userSpaceOnUse">
          <stop offset="0" stopColor="#00bf0c"/>
          <stop offset="1" stopColor="#065500"/>
        </linearGradient>
        <linearGradient id="OpposingForceCircleGradient" x1="211.1" y1="422.6" x2="211.1" y2="3.2" gradientTransform="translate(0 424) scale(1 -1)" gradientUnits="userSpaceOnUse">
          <stop offset="0" stopColor="#00bf0c"/>
          <stop offset="1" stopColor="#065500"/>
        </linearGradient>
      </defs>
      <path d="M261.7,322.3l-47.4-120.1-69.5,109.5h-43.6l97.1-156.7-10.9-31h-37.8v-36.9h64.7l74.3,189 32.7-10.6 10.9,36.6-70.5,20.3Z"
            fill="url(#OpposingForceLambdaGradient)"/>
      <path d="M401.3,211.1c0,105.1-85.2,190.2-190.2,190.2S20.9,316.2,20.9,211.1,106,20.9,211.1,20.9s190.2,85.2,190.2,190.2Z"
            fill="none" stroke="url(#OpposingForceCircleGradient)" strokeWidth="39" strokeMiterlimit="10"/>
      <rect x="237.6" y="299.2" width="184.6" height="61.5" fill="#ffffff"/>
      <rect x="237.6" y="360.7" width="184.6" height="61.5" fill="#d52b1e"/>
      <rect x="237.6" y="340.2" width="184.6" height="41" fill="#0039a6"/>
    </svg>
);

const CSIcon = (props: React.SVGProps<SVGSVGElement>) => (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024" {...props}>
        <circle cx="512" cy="512" r="512" fill="#eee"/>
        <path d="M730.1,306.4v-21.2h-9.5v10.1h-21.8v-9.5h-5.7v8.2h-21.2v-13.3h-4.4v-2.5h-3.8v7.6h-4.4v3.8h-26.2v-4.4h-24v-8.8h-12.6v4.4h-22.7c-1.6,1.9-3.2,3.5-4.4,5.1-2.2,2.8-4.1,6-5.7,8.8h-12.6l-12.9-2.2-.6,5.1c1.3-10.4,2.2-17.4,1.6-18-2.8-5.1,5.4-14.5,6.6-16.1l6.9-11.4-7.3-15.5c-11.7-24.9-29.1-38.5-45.8-35.7-17.1,3.2-21.5,5.1-33.2,15.5-9.5,8.8-12.9,14.8-15.8,27.8-1.9,9.2-2.5,18.9-1.3,21.8,1.3,3.5,0,5.4-2.8,5.4s-14.5,12.3-26.8,27.2l-21.8,26.8-3.8,29.1c-3.8,26.5-16.1,91.6-21.2,108.6-1.3,4.4-.6,7.3,1.6,7.3s2.8,4.1,1.6,11.7c-.9,6.6,0,16.1,1.6,20.8,2.8,6.9,1.9,13.9-4.7,36.3-4.4,15.2-14.2,49.3-21.2,75.5-12.3,44.2-13.9,48.6-22.1,51.8-11.1,4.7-37.3,33.5-45.5,49.9l-6.3,12.9,6.6,22.4c5.7,19.3,8.5,24,18,30.3s13.6,7.3,24.6,5.4c16.4-2.5,21.8-12.3,16.4-30-1.9-6.3-3.5-12.3-3.5-13.6s9.8-1.9,21.8-1.9c19.9,0,22.1-.6,24.3-7.3,1.3-3.8,7.9-18.9,14.5-33.5,6.9-14.5,14.5-33.8,16.7-42.6,6.9-25.9,36.9-96.6,41.1-96.6,7.3,0,20.2,12.9,37.6,37.3,9.5,13.3,23.7,30.6,31.6,38.2,8.2,8.2,15.2,18,16.1,23.7,1.3,5.4,6.9,29.7,13.3,54,6.9,28.7,10.4,48,9.2,55.3-2.2,14.8,8.5,30.3,31.3,43.9,16.4,10.1,18.9,10.4,32.5,7.9,19.9-3.8,20.5-10.7,4.4-38.8-11.4-19.6-12.9-24.9-14.8-49.9-.9-15.2-4.1-36.6-6.6-47.4-2.5-11.1-4.4-25.9-4.1-33.2,0-11.4-1.9-17.1-13.3-34.1-7.3-11.4-18.3-26.2-24-33.5-11.7-14.5-12.9-21.5-5.1-26.2,5.1-2.5,5.1-3.8-.6-14.5-3.5-6.3-13.3-19.6-21.5-29.4-8.5-9.8-17.7-22.1-20.5-26.8-4.1-6.6-6.9-8.5-12.3-6.9-6.9,1.6-7.3.6-7.3-13.9s1.3-16.1,6.3-17.7c6.9-2.2,8.8-8.2,10.1-30l.9-14.2s1.3-7.9,2.8-19.6v3.2c-.3,0,13.3,0,13.3,0l34.4,2.5c2.8-1.3,5.7-2.8,8.2-4.4,5.7-2.8,10.1-6.3,13.9-9.5,1.3-1.3,2.2-1.3,2.5-1.3,5.1-5.1,8.5-8.5,10.7-10.4s3.5-3.2,4.4-3.2h1.9c1.5,0,4.7-.3,6.6-.3s3.5-.6,5.4-.9c1.9,0,3.5-.9,5.1-1.3l5.7-10.1c.9-1.3,1.6-2.2,1.9-2.5.9-.6,1.6,0,1.9,2.5.9,3.5,2.5,9.8,5.4,18.6,2.8,8.8,7.9,18.9,14.8,30.3l13.3-6.3c-4.7-7.9-8.5-15.8-11.4-22.7-3.2-6-5.4-12-6.9-18.3-1.6-6.3-2.2-11.4-1.3-14.5,1.3,0,2.8,0,4.4-.6,1.3-.6,2.8-.9,4.4-1.6,1.9-.6,3.5-1.3,5.1-2.2,2.8-1.6,4.7-4.4,5.7-7.6.6-1.9.6-3.5.6-5.1h64.7v-13.3h-16.4Z" fill="#152036"/>
        <rect x="513.4" y="681.6" width="512.1" height="170.6" fill="#ffffff"/>
        <rect x="513.4" y="852.2" width="512.1" height="170.6" fill="#d52b1e"/>
        <rect x="513.4" y="795.4" width="512.1" height="113.7" fill="#0039a6"/>
    </svg>
);

const TFCIcon = (props: React.SVGProps<SVGSVGElement>) => (
    <svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 1024 1024" {...props}>
      <g>
        <g id="_Layer_1" data-name="Layer_1">
          <g id="vector">
            <circle cx="512" cy="512" r="512" fill="#eba454"/>
            <g id="g1">
              <g id="g3">
                <path id="path1" d="M192,409.5s7.7-25.9,13.1-38.2c6.6-14.9,14.6-29.3,23.5-43,8.7-13.5,18.5-26.5,29.1-38.6,8.5-9.7,18-18.4,27.5-27.1,8.6-7.8,17.4-15.4,26.7-22.3,9.8-7.2,20.1-13.9,30.7-19.9s21.5-11.5,32.6-16.3c12.3-5.3,25-9.6,37.8-13.5,8.4-2.6,16.9-5,25.5-6.8,11.7-2.5,23.6-3.9,35.4-5.6,5.2-.7,15.5-2,15.5-2,0,0,3.4,5.4,5.5,7.7,2.3,2.5,7.7,6.7,7.7,6.7,0,0-1.5,16.2-2.4,24.3-1.4,13-2.9,26-4.4,39-1.6,13.5-3.2,27.1-4.8,40.6-1.4,11.8-2.4,23.6-4,35.4-2.2,16.5-7.6,49.4-7.6,49.4,0,0-13.5,3.4-19.9,6-4.4,1.8-8.6,4.1-12.7,6.4-6.1,3.4-12.3,7-17.9,11.1-4.4,3.2-8.4,7-12.3,10.7-3.6,3.5-7.1,7.2-10.4,11.1-3.6,4.3-7,8.8-10,13.5-2,3.3-5.2,10.4-5.2,10.4,0,0-20.9-3.1-31.4-4.4-12.1-1.5-24.2-2.5-36.2-4-12.1-1.5-24.1-3.3-36.2-4.8-10.2-1.3-20.4-2.4-30.7-3.6-9.3-1.1-18.6-2.2-27.9-3.2-5.3-.6-10.7-.7-15.9-1.6-3-.5-8.8-2-8.8-2,0,0-2.8-6.2-4.8-8.9-2-2.6-7.1-6.6-7.1-6.6h0Z" fill="#fff"/>
                <path id="path2" d="M599.3,203.3s5.9-3.2,8.4-5.3c2.2-1.9,5.9-6.6,5.9-6.6,0,0,9.4,2.4,13.9,4,7,2.4,13.9,5.4,20.7,8.4,8.2,3.6,16.4,7.2,24.3,11.5,9.1,5,17.6,11,26.3,16.7,7.8,5.2,15.8,10.1,23.1,15.9,10.8,8.6,20.9,18.1,30.7,27.9,6,6,11.6,12.3,17.1,18.7,6.1,7.2,12,14.6,17.5,22.3,6.4,8.9,12.5,18,17.9,27.5,4.9,8.7,9.1,17.9,13.1,27.1,4.1,9.3,7.7,18.8,11.1,28.3,3,8.2,6,16.3,8.4,24.7,2.8,10,5,20.1,6.8,30.3,1.1,6.5,1.8,13,2.4,19.5.6,6.2,1.2,18.7,1.2,18.7,0,0-5.4,2.2-7.8,3.8-2.8,1.9-7.4,6.6-7.4,6.6,0,0-53.4-6-80-9.2-25.6-3.1-51.3-5.7-76.8-9.6-10.5-1.6-31.4-5.6-31.4-5.6,0,0-2.5-10.5-4.4-15.5-2.1-5.7-4.6-11.3-7.6-16.7-3.2-5.8-6.8-11.4-10.7-16.7-4.6-6.2-9.5-12.2-15.1-17.5-4.3-4-9.1-7.4-13.9-10.7-5.8-4-17.9-11.1-17.9-11.1,0,0,2.8-19.1,4-28.7.9-7.2,1.6-14.3,2.4-21.5.9-7.8,1.8-15.7,2.8-23.5.9-7.6,1.8-15.1,2.8-22.7.9-6.9,1.9-13.8,2.8-20.7,1-7.7,1.8-15.4,2.8-23.1,1-7.4,2.1-14.9,3.2-22.3.7-5.2,1.4-10.5,2.2-15.7.4-3,1.4-9,1.4-9h0l-.2-.2Z" fill="#fff"/>
                <path id="path3" d="M633.5,575.1s10.9,1.3,16.3,2c11.7,1.5,23.3,3.3,35,4.8,10.6,1.3,21.2,2.3,31.8,3.6,11.8,1.4,23.6,3,35.4,4.4,12.1,1.4,24.2,2.6,36.2,4,10.6,1.2,31.8,4,31.8,4,0,0,2.9,5.6,4.7,8,2.2,2.8,7.3,7.6,7.3,7.6,0,0-2.4,6.9-3.6,10.4-2.4,6.9-4.4,13.9-7.2,20.7-3.1,7.6-6.7,15-10.4,22.3-3.7,7.4-7.3,14.8-11.5,21.9-4.5,7.6-9.5,14.8-14.7,21.9-6.1,8.3-12.7,16.2-19.5,23.9-7.4,8.3-15,16.3-23.1,23.9-7,6.6-14.3,12.8-21.9,18.7-7.9,6.1-16.3,11.7-24.7,17.1-9.4,6-18.8,12-28.7,17.1-9.4,4.8-19.2,8.8-29.1,12.7-8.1,3.2-16.4,6.1-24.7,8.8-11.3,3.6-22.7,7-34.2,9.6-10.1,2.2-20.4,3.7-30.7,4.8-5.2.5-15.5.8-15.5.8,0,0-2.8-6.3-4.7-8.9-2.1-2.8-7.3-6.7-7.3-6.7,0,0,4.7-34.2,6.8-51.4,2.3-19.1,4.2-38.2,6.4-57.3,1.8-15.5,3.5-31.1,5.6-46.6,1.4-10.6,4.8-31.8,4.8-31.8,0,0,9.9-3.3,14.7-5.2,6-2.3,12.2-4.6,17.9-7.6,4.9-2.5,9.5-5.6,13.9-8.8,4-2.8,7.9-5.9,11.5-9.2,4.6-4.1,9.2-8.4,13.1-13.1,3.1-3.7,5.6-7.9,8.4-11.9,3.2-4.7,9.6-14.3,9.6-14.3h0l.3-.2Z" fill="#fff"/>
                <path id="path3-8" d="M448.6,634s-1.3,10.9-2,16.3c-1.5,11.7-3.3,23.3-4.8,35-1.3,10.6-2.3,21.2-3.6,31.8-1.4,11.8-3,23.6-4.4,35.4-1.4,12.1-2.6,24.2-4,36.2-1.2,10.6-4,31.8-4,31.8,0,0-5.6,2.9-8,4.7-2.8,2.2-7.6,7.3-7.6,7.3,0,0-6.9-2.4-10.4-3.6-6.9-2.4-13.9-4.4-20.7-7.2-7.6-3.1-15-6.7-22.3-10.4-7.4-3.7-14.8-7.3-21.9-11.5-7.6-4.5-14.8-9.5-21.9-14.7-8.3-6.1-16.2-12.7-23.9-19.5-8.3-7.4-16.3-15-23.9-23.1-6.6-7-12.8-14.3-18.7-21.9-6.1-7.9-11.7-16.3-17.1-24.7-6-9.4-12-18.8-17.1-28.7-4.8-9.4-8.8-19.2-12.7-29.1-3.2-8.1-6.1-16.4-8.8-24.7-3.6-11.3-7-22.7-9.6-34.2-2.2-10.1-3.7-20.4-4.8-30.7-.5-5.2-.8-15.5-.8-15.5,0,0,6.5-3.4,9.1-5.3,2.8-2.1,6.5-6.7,6.5-6.7,0,0,34.2,4.7,51.4,6.8,19.1,2.3,38.2,4.2,57.3,6.4,15.5,1.8,31.1,3.5,46.6,5.6,10.6,1.4,31.8,4.8,31.8,4.8,0,0,3.3,9.9,5.2,14.7,2.3,6,4.6,12.2,7.6,17.9,2.5,4.9,5.6,9.5,8.8,13.9,2.8,4,5.9,7.9,9.2,11.5,4.1,4.6,8.4,9.2,13.1,13.1,3.7,3.1,7.9,5.6,11.9,8.4,4.7,3.2,14.3,9.6,14.3,9.6h0l.2.3Z" fill="#fff"/>
              </g>
            </g>
          </g>
          <rect x="487.6" y="666.6" width="536.4" height="178.7" fill="#fff"/>
          <rect x="487.6" y="845.3" width="536.4" height="178.7" fill="#d52b1e"/>
          <rect x="487.6" y="785.7" width="536.4" height="119.1" fill="#0039a6"/>
        </g>
      </g>
    </svg>
);

const YaPBIcon = (props: React.SVGProps<SVGSVGElement>) => (
  <svg {...props} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
    <path d="M3 3v18h18" />
    <path d="m19 9-5 5-4-4-3 3" />
  </svg>
);

const iconMap: { [key: string]: React.ElementType } = {
  'half-life-rus': HalfLifeIcon,
  'blue-shift-rus': BlueShiftIcon,
  'opposing-force-rus': OpposingForceIcon,
  'cs-16-rus': CSIcon,
  'tfc-rus': TFCIcon,
  'yapb-graphs': YaPBIcon,
};

export const hasProjectIcon = (slug: string) => {
    return !!iconMap[slug];
}

export const ProjectIcons = ({ slug, ...props }: IconProps) => {
  if (!slug) return null;
  const IconComponent = iconMap[slug];
  return IconComponent ? <IconComponent {...props} /> : null;
};
